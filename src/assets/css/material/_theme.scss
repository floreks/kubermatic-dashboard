// Copyright 2020 The Kubermatic Kubernetes Platform contributors.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

@mixin theme-material-override($colors) {
  /* ==================== mat-slide-toggle ==================== */
  .mat-slide-toggle {
    .mat-slide-toggle-label {
      .mat-slide-toggle-bar {
        background-color: map-get($colors, divider);
      }
    }

    &.mat-checked {
      .mat-slide-toggle-bar {
        background-color: map-get($colors, background-primary);
      }

      .mat-slide-toggle-thumb {
        background-color: #fafafa;
      }
    }
  }

  /* ==================== mat-table ==================== */
  .mat-table {
    .mat-header-cell,
    .mat-sort-header-button {
      color: map-get($colors, text);
    }

    td {
      &.mat-cell {
        border-top: 1px solid map-get($colors, divider);
      }
    }

    .mat-sort-header-arrow {
      .mat-sort-header-stem,
      .mat-sort-header-pointer-left,
      .mat-sort-header-pointer-right,
      .mat-sort-header-pointer-middle {
        background: none;
      }
    }

    [aria-sort='ascending'] {
      .mat-sort-header-arrow {
        .mat-sort-header-indicator {
          &::before {
            background-color: map-get($colors, text);
          }
        }
      }
    }

    [aria-sort='descending'] {
      .mat-sort-header-arrow {
        .mat-sort-header-indicator {
          &::before {
            background-color: map-get($colors, text);
          }
        }
      }
    }
  }

  /* ==================== mat-card ==================== */
  .mat-card {
    color: map-get($colors, text);
  }

  .mat-card-content {
    p {
      color: map-get($colors, text-secondary);
    }

    button {
      border: none;
      color: map-get($colors, primary);
    }
  }

  /* ==================== mat-drawer ==================== */
  .mat-drawer-container {
    background-color: map-get($colors, background);
  }

  .mat-drawer-side {
    border: none;
  }

  /* ==================== mat-tooltip ==================== */
  .mat-tooltip {
    background-color: map-get($colors, tooltip-background);
  }

  /* ==================== mat-form-field ==================== */
  mat-form-field {
    &.mat-form-field {
      color: map-get($colors, text);
    }

    &.mat-form-field-should-float:not(.mat-focused):not(.ng-invalid):not(.mat-form-field-disabled) {
      div.mat-form-field-flex:hover {
        label {
          color: map-get($colors, secondary-dark);
        }
      }
    }

    &.mat-focused {
      &:not(.ng-invalid),
      &.ng-pristine:not(.ng-touched) {
        label.mat-form-field-label {
          color: map-get($colors, primary-dark);
        }
      }
    }
  }

  .mat-form-field-appearance-outline {
    .mat-form-field-outline {
      color: map-get($colors, divider);
    }
  }

  .mat-form-field-appearance-outline.mat-focused {
    .mat-form-field-outline-thick {
      color: map-get($colors, primary);
    }
  }

  div.mat-form-field-outline.mat-form-field-outline-thick {
    color: map-get($colors, secondary);
  }

  .mat-form-field-disabled {
    .mat-form-field-outline {
      color: map-get($colors, divider-disabled);
    }
  }
}

// Copyright 2020 The Kubermatic Kubernetes Platform contributors.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

@import 'variables';
@import 'mixins';
@import '~@angular/material/theming';

@include mat-core();

@mixin theme($theme, $colors) {
  $palette-foreground: map-get($theme, foreground);
  $palette-background: map-get($theme, background);

  $text: mat-color($palette-foreground, text);
  $text-secondary: mat-color($palette-foreground, secondary-text);
  $text-disabled: mat-color($palette-foreground, disabled-text);
  $checkbox-disabled: mat-color($palette-foreground, disabled-checkbox);

  $background: mat-color($palette-background, background);
  $background-hover: mat-color($palette-background, hover);
  $background-card: mat-color($palette-background, card);
  $background-dialog: mat-color($palette-background, dialog);
  $background-disabled-button: mat-color($palette-background, disabled-button);
  $background-app-bar: mat-color($palette-background, app-bar);

  $divider: mat-color($palette-foreground, divider);
  $divider-disabled: mat-color($palette-foreground, disabled);

  $chip-background: $divider;

  $project-switch: rgba(mat-color($palette-foreground, secondary-text), .7);

  $transition: all .5s ease;

  .mat-drawer-container {
    background-color: map-get($colors, background);
  }

  .mat-drawer-side {
    border: none;
  }

  .mat-tooltip {
    background-color: map-get($colors, tooltip-background);
  }

  .mat-card-content {
    p {
      color: $text-secondary;
    }

    button {
      border: none;
      color: map-get($colors, primary);
    }
  }

  .mat-form-field-appearance-outline .mat-form-field-outline {
    color: $divider;
  }

  .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
    color: map-get($colors, primary);
  }

  mat-form-field.mat-form-field {
    color: $text;
  }

  div.mat-form-field-outline.mat-form-field-outline-thick {
    color: map-get($colors, secondary);
  }

  mat-form-field.mat-form-field-should-float:not(.mat-focused):not(.ng-invalid):not(.mat-form-field-disabled) div.mat-form-field-flex:hover label {
    color: map-get($colors, secondary-dark);
  }

  mat-form-field.mat-focused:not(.ng-invalid) label.mat-form-field-label,
  mat-form-field.mat-focused.ng-pristine:not(.ng-touched) label.mat-form-field-label {
    color: map-get($colors, primary-dark);
  }

  .mat-form-field-disabled .mat-form-field-outline {
    color: $divider-disabled;
  }

  mat-hint a {
    color: map-get($colors, primary);
    text-decoration: none;
  }

  .mat-button,
  .mat-flat-button,
  .mat-raised-button {
    background-color: map-get($colors, primary);
    // TODO: Use variable
    color: #fff;

    &:hover:not([disabled]) {
      background-color: map-get($colors, primary-hover);
    }

    &.mat-alternative:not([disabled]) {
      background-color: map-get($colors, secondary);

      &:hover {
        background-color: map-get($colors, secondary-hover);
      }
    }

    &.mat-tertiary:not([disabled]) {
      background-color: transparent;
      border: 1px solid $project-switch;
      color: $text-secondary;

      &:hover {
        background-color: $background-hover;
      }
    }

    &.mat-pure:not([disabled]) {
      background-color: transparent;
      border: none;
      color: $text-secondary;

      &:hover {
        background-color: $background-hover;
      }
    }
  }

  .mat-icon-button {
    i {
      background-color: $text;
    }

    &:hover:not([disabled]) {
      background-color: $divider;
    }

    &:disabled i {
      background-color: $background-disabled-button;
    }
  }

  .mat-button-focus-overlay {
    background-color: transparent;
  }

  .mat-checkbox-checked .mat-checkbox-background {
    background-color: map-get($colors, primary);
  }

  .mat-checkbox-disabled .mat-checkbox-background {
    background-color: $checkbox-disabled;
  }

  .mat-checkbox-frame {
    border: 2px solid $divider;
  }

  .mat-dialog-container {
    color: $text;

    .mat-dialog-content {
      a {
        color: map-get($colors, primary);
      }
    }
  }

  .mat-chip.mat-standard-chip {
    background: transparent;
    border: 1px solid $divider;
    color: $text;

    div:not(.mat-chip-ripple) {
      background: $divider;
    }

    div.km-chip-accent {
      background: transparent;
    }
  }

  .mat-select-arrow {
    background-color: $text;
  }

  .mat-optgroup-label {
    background-color: map-get($colors, option-background);
  }

  .mat-option {
    background-color: map-get($colors, option-background);
    color: $text;

    &:hover {
      background-color: map-get($colors, option-background-hover);
    }
  }

  .mat-progress-spinner circle,
  .mat-spinner circle {
    stroke: map-get($colors, primary-hover);
  }

  ::-webkit-scrollbar-thumb {
    background: map-get($colors, scrollbar);
  }

  ::-webkit-scrollbar-track {
    background: map-get($colors, scrollbar-background);
  }

  .km-editor {
    .header {
      color: $text-secondary;

      &.card {
        background-color: $background-card;
      }

      &.dialog {
        background-color: $background-dialog;
      }

      &.focused {
        color: map-get($colors, primary-dark);
      }
    }

    .monaco-editor {
      box-shadow: 0 0 0 1px $divider;

      .margin {
        background-color: $divider;

        .line-numbers {
          color: $text;
        }
      }

      &.focused {
        box-shadow: 0 0 0 2px map-get($colors, primary-hover);
      }
    }

    &:hover {
      .header {
        color: map-get($colors, secondary-dark);
      }

      .monaco-editor {
        box-shadow: 0 0 0 2px map-get($colors, secondary-hover);
      }
    }
  }

  .km-code-block {
    background-color: $divider;
    color: $text;
  }

  // TODO: check this?
  .km-no-item {
    border-color: $divider;
  }

  .km-main,
  .km-main > div,
  .km-footer {
    background-color: $background;
  }

  .km-navbar {
    background-color: $background-app-bar;
    box-shadow: map-get($colors, shadow);
  }

  .km-footer {
    * {
      color: map-get($colors, footer-text);
    }

    i {
      filter: grayscale(1) brightness(0) invert(.75);
    }
  }

  .km-terms * {
    color: $text;
  }

  .km-update-available-badge {
    border: 1px solid map-get($colors, secondary);

    .km-icon-update-available-arrow {
      background-color: map-get($colors, secondary);
    }
  }

  .km-notification {
    background: $background-card;
    color: $text;
  }

  .km-notification-type {
    &.success {
      background: map-get($colors, indicator-green);
    }

    &.error {
      background: map-get($colors, indicator-red);
    }
  }

  .km-panel .panel {
    background-color: $background-app-bar;
    box-shadow: map-get($colors, shadow-dark);
    color: $text;

    .notification-info .km-icon-mask {
      background-color: $text-secondary;
    }
  }

  .km-projects-external p {
    border: 1px solid map-get($colors, primary);
    color: $text;
  }

  .km-sidenav {
    background-color: $background;

    span {
      color: $text;
    }

    .mat-divider {
      border-top-color: map-get($colors, sidenav-divider);
    }

    .menu-item a {
      &:hover {
        background-color: map-get($colors, sidenav-background-hover);
      }

      &.active {
        background-color: map-get($colors, sidenav-background-active);

        i {
          background-color: map-get($colors, primary-hover);
        }

        span {
          color: map-get($colors, primary-hover);
        }
      }
    }
  }

  .km-table-dropdown {
    background-color: transparent;

    *:not(i) {
      background-color: transparent;
    }

    td.mat-cell {
      border-top: 1px solid $divider;
    }

    td:first-child {
      border-left: 1px solid $divider;
    }

    td:last-child {
      border-right: 1px solid $divider;
    }
  }

  .km-mat-row.km-pointer:hover {
    background-color: $background-hover;
  }

  .km-mat-footer-row {
    border-color: $divider;
    color: $text-secondary;

    &:hover {
      background-color: $background-hover;
    }

    button {
      background-color: transparent;
      color: $text-secondary;
    }
  }

  .km-paginator {
    border-top: 1px solid $divider;

    .mat-paginator-range-actions button:not([disabled]) {
      color: $text-secondary;
    }
  }

  .km-project-toggle {
    .mat-tab-label {
      background-color: map-get($colors, wizard-step-background-active);

      &.mat-tab-disabled {
        background-color: $background-disabled-button;
      }

      &.mat-tab-label-active {
        .mat-tab-label-content {
          background-color: map-get($colors, primary);
        }
      }
    }
  }

  .km-short-name-circle {
    background-color: $background-card;
    border: 2px solid $divider;

    &.km-hidden-owners {
      background-color: $divider;
    }
  }

  .km-projects-container {
    i {
      background-color: $text;
    }

    &:hover {
      background-color: map-get($colors, project-selector-hover);
    }
  }

  .km-wizard-settings-extended-wrapper {
    .km-wizard-settings-extended-divider {
      background: $divider;
    }

    .km-wizard-settings-extended-btn {
      color: $text-secondary;

      .km-icon-arrow-down,
      .km-icon-arrow-up {
        background: $text-secondary;
      }
    }
  }

  km-wizard-summary-step {
    .header {
      &::before {
        border-color: map-get($colors, primary);
        color: $text-secondary;
      }
    }
  }

  .km-card-progress-bar {
    .km-wizard-step {
      color: $text-secondary;

      .km-wizard-step-number {
        background: $divider;
      }

      &.active {
        color: map-get($colors, primary);

        .km-wizard-step-number {
          background: map-get($colors, wizard-step-background);
        }
      }

      &.completed {
        color: map-get($colors, primary);

        .km-wizard-step-number {
          background: map-get($colors, wizard-step-background);
        }
      }
    }

    .km-wizard-step-divider {
      background: $divider;
    }
  }

  .km-version-picker-container {
    .km-version-picker {
      .mat-form-field-outline {
        color: $divider;
      }

      .km-version-picker-type {
        background: $divider;
        border-color: $divider;
      }

      .mat-form-field {
        .mat-select-value-text {
          color: $text;
        }

        div.mat-form-field-flex label {
          color: $text-secondary;
        }
      }
    }

    .km-version-picker-enabled:hover {
      .km-version-picker-type {
        border-color: map-get($colors, secondary);
      }

      .mat-form-field-outline-thick {
        color: map-get($colors, secondary);
      }

      div.mat-form-field-flex label {
        color: map-get($colors, secondary-dark);
      }
    }
  }

  .km-cluster-panel {
    color: $text;

    .mat-icon-button {
      &:hover {
        background-color: rgba($text, .1);
      }

      i {
        background-color: $text;
      }
    }
  }

  .km-addon-container {
    .km-addon-menu {
      border-left: 1px solid $divider;

      &:hover {
        background-color: $background-hover;
      }
    }
  }

  .km-new-addon-container {
    color: map-get($colors, footer-text);

    &.disabled {
      border: 1px dashed $background-hover;
      color: $text-secondary;
    }

    &:hover:not(.disabled) {
      background-color: $background-hover;
      border: 1px solid $divider;
    }
  }

  .km-select-addon-dialog-option-container {
    box-shadow: 0 0 0 1px $divider;

    &:hover {
      box-shadow: 0 0 0 2px map-get($colors, secondary-hover);
    }

    .km-select-addon-dialog-option-desc {
      color: $text;
    }
  }

  .km-property-usage-bar {
    .mat-progress-bar-buffer {
      background-color: $divider;
    }

    .mat-progress-bar-fill::after {
      background-color: map-get($colors, primary-hover);
    }
  }

  .km-swagger-container {
    .info *,
    .schemes-title,
    .model-title {
      color: $text;
    }

    a {
      color: map-get($colors, primary);
    }

    .scheme-container {
      background-color: transparent;
    }
  }

  .mat-step-header {
    .mat-step-icon {
      background: $divider;
      color: $text-secondary;

      &.mat-step-icon-selected,
      &.mat-step-icon-state-edit {
        background: map-get($colors, wizard-step-background);
        color: map-get($colors, primary);
      }
    }

    .mat-step-label {
      color: $text-secondary;

      &.mat-step-label-active {
        color: $text-secondary;
      }

      &.mat-step-label-selected {
        color: map-get($colors, primary);
      }
    }

    &.cdk-program-focused {
      background-color: unset;
    }
  }

  .km-select-input {
    border-bottom: 1px solid $divider;
  }

  .km-add-machine-network {
    &:hover {
      background-color: $background-hover;
    }
  }

  // ==================== Kubermatic global styles ==================== //

  // ==================== Globally usable styles ==================== //
  .km-header {
    color: $text;
  }

  .km-text {
    color: $text;
  }

  .km-text-muted {
    color: $text-secondary;
  }

  .km-info {
    background-color: map-get($colors, primary-hover);
  }

  .km-success {
    color: map-get($colors, indicator-green);
  }

  .km-success-bg {
    background-color: map-get($colors, indicator-green);
  }

  .km-warning {
    color: map-get($colors, indicator-orange);
  }

  .km-warning-bg {
    background-color: map-get($colors, indicator-orange);
  }

  .km-error {
    color: map-get($colors, indicator-red);
  }

  .km-error-bg {
    background-color: map-get($colors, indicator-red);
  }

  .km-hover-bg:hover {
    background-color: $background-hover;
  }

  .km-border {
    border: 1px solid $divider;
  }

  .km-border-dashed {
    border: 1px dashed $divider;
  }

  .km-icon {
    color: $text;
  }

  .km-icon-mask {
    background-color: $text;
  }

  .km-menu-header {
    color: $text;
  }

  .km-copy {
    &:hover {
      color: map-get($colors, primary);
    }

    &:active {
      color: lighten(map-get($colors, primary), .5);
    }
  }

  .km-login-footer * {
    color: #fff;
  }

  // ==================== MAT-BUTTON-TOGGLE ==================== //

  .mat-button-toggle-group {
    background-color: transparent;
    border: none;

    .mat-button-toggle {
      border: 1px solid $divider;
    }

    .mat-button-toggle-label-content {
      color: $text;
    }

    &.mat-button-toggle-checked {
      background-color: transparent;
      border: 1px solid map-get($colors, primary);
    }

    &:hover {
      border: none;
      transition: $transition;
    }
  }

  .km-cluster-spec-type {
    &.mat-button-toggle-group {
      .mat-button-toggle {
        background-color: $background-hover;

        &:hover {
          border: 2px solid map-get($colors, secondary);
        }

        &.mat-button-toggle-checked {
          border: 2px solid map-get($colors, primary);
        }
      }
    }
  }

  /* ==================== Angular Material Overrides ==================== */

  /* ========== mat-slide-toggle ========== */
  .mat-slide-toggle {
    .mat-slide-toggle-label {
      .mat-slide-toggle-bar {
        background-color: $divider;
      }
    }

    &.mat-checked {
      .mat-slide-toggle-bar {
        background-color: map-get($colors, primary);
      }

      .mat-slide-toggle-thumb {
        background-color: #fafafa;
      }
    }
  }

  /* ========== mat-table ========== */
  .mat-table {
    .mat-header-cell,
    .mat-sort-header-button {
      color: $text;
    }

    td {
      &.mat-cell {
        border-top: 1px solid $divider;
      }
    }

    .mat-sort-header-arrow {
      .mat-sort-header-stem,
      .mat-sort-header-pointer-left,
      .mat-sort-header-pointer-right,
      .mat-sort-header-pointer-middle {
        background: none;
      }
    }

    [aria-sort='ascending'] {
      .mat-sort-header-arrow {
        .mat-sort-header-indicator {
          &::before {
            background-color: $text;
          }
        }
      }
    }

    [aria-sort='descending'] {
      .mat-sort-header-arrow {
        .mat-sort-header-indicator {
          &::before {
            background-color: $text;
          }
        }
      }
    }
  }

  /* ========== mat-card ========== */
  .mat-card {
    color: $text;

    &.km-with-table-header {
      .mat-card-content {
        &.km-row,
        .km-row {
          border-top: 1px solid $divider;

          p {
            color: $text;
          }
        }
      }
    }
  }
}
